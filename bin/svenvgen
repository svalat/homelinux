#!/bin/bash
##############################################################
#                                                            #
#         PROJECT : svHomeLinux                              #
#         VERSION : 1.1                                      #
#         DATE    : jeu. févr.  3 18:53:24 CET 2011          #
#         AUTHORS : Sébastien Valat                          #
#         LICENCE : GPLv2                                    #
#                                                            #
##############################################################

######################### SECTION ############################
if [ -z "$1" ]; then
	CONFIG_FILE=${HOME}/.svconfig
	LOAD_VARIANTS=true
else
	CONFIG_FILE=$1
	LOAD_VARIANTS=false
fi
# echo "#Config file is $CONFIG_FILE"

######################### SECTION ############################
#check config file
if [ ! -f ${CONFIG_FILE} ]; then
	echo "Error: Can't find ${CONFIG_FILE} file" 1>&2
	exit 1
fi

######################### FUNCTION ###########################
# Add the given path to the given value
# Parms:
#   - initial value
#   - path to add before the given list
function addPathToVar()
{
	if [ -z "$1" ]; then
		echo "$2"
	else
		echo "$2:$1"
	fi
}

######################### SECTION ############################
#before sourcing local config file, we load inherited one to avoid
#an impact of local values.
flist=$(bash -c "$(cat ${CONFIG_FILE});echo \$INHERIT_SVENV")
if [ ! -z "$flist" ]
then
	for tmp in $flist
	do
		#echo "#Load env $tmp"
		inherited_prefix=$(bash -c "$(cat $tmp);echo \$PREFIX")
		if [ -z "$inherited_prefix" ] || [ ! -d "$inherited_prefix" ]; then
			echo "Inherated environnement $tmp provide an invalide prefix : '$inherited_prefix'"
		else
			eval "$($inherited_prefix/bin/svenvgen $tmp)"
		fi
	done
fi

######################### SECTION ############################
#load it
source ${CONFIG_FILE}

######################### SECTION ############################
#check config file
if [ ! -f ${PREFIX}/lib/svhomelinux/svcommon.sh ]; then
	echo "Error: Can't find ${PREFIX}/lib/svhomelinux/svcommon.sh file" 1>&2
	exit 1
fi
source ${PREFIX}/lib/svhomelinux/svcommon.sh || exit 1

############################ CHECK ###########################
#Check python version
if [ -z "$PYTHON_VERSION" ]; then
	echo "Warning : Please setup the PYTHON_VERSION into ${CONFIG_FILE} file" 1>&2
fi

######################### FUNCTION ###########################
# Return the list of variants available
function getVariants()
{
	$PREFIX/bin/svselect list | grep '*' | cut -f 3 -d ' '
}

######################### FUNCTION ###########################
# Add the given path to the given value
# Parms:
#   - initial value
#   - path to add before the given list
function addPathToVar()
{
	if [ -z "$1" ]; then
		echo "$2"
	else
		echo "$2:$1"
	fi
}

######################### FUNCTION ###########################
# Define a new prefix and setup all variables
# Parms:
#   - Prefix path
#   - [noldpath]
function addNewPrefix()
{
	if [ "$2" != 'noldpath' ]; then
	LD_LIBRARY_PATH=`addPathToVar $LD_LIBRARY_PATH $1/lib`
	LD_LIBRARY_PATH=`addPathToVar $LD_LIBRARY_PATH $1/lib64`
	fi
	PATH=`addPathToVar $PATH $1/bin`
	MANPATH=`addPathToVar $MANPATH $1/share/man`
	CPATH=`addPathToVar $CPATH $1/include`
	PERL5LIB=`addPathToVar $PERL5LIB $1/lib/perl5`
	PERL5LIB=`addPathToVar $PERL5LIB $1/lib/perl5/site_perl`
	PKG_CONFIG_PATH=`addPathToVar $PKG_CONFIG_PATH $1/lib/pkgconfig`
	PKG_CONFIG_PATH=`addPathToVar $PKG_CONFIG_PATH $1/share/pkgconfig`
	PYTHONPATH=/ptmp/gpocre/besnardjb/usr/lib/python${PYTHON_VERSION}/site-packages/:${PYTHONPATH}
}

######################### SECTION ############################
#setup the default prefix
addNewPrefix "${PREFIX}"
if [ -d "${PREFIX}/variants/noldpath" ]; then
	addNewPrefix "${PREFIX}/variants/noldpath" noldpath
fi

if [ "$LOAD_VARIANTS" = "true" ]; then
	#setup all variants
	for variant in $(getVariants)
	do
		addNewPrefix "${PREFIX}/variants/$variant"
	done
fi

######################### SECTION ############################
echo "###############################################"
echo "#   Welcome to svEnvironnement installed in   #"
printf "# %-43s #\n" "$PREFIX"
echo "#                                             #"
echo "# Management commands are :                   #"
echo "# svinstall, svconfigure, svpackage, svselect #"
echo "###############################################"

######################### SECTION ############################
echo
echo "#Global :"
echo "export LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}\""
echo "export PATH=\"$PATH\""
echo "export MANPATH=\"$MANPATH\""
echo "export CPATH=\"$CPATH\""
echo "export PERL5LIB=\"$PERL5LIB\""
echo "export PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH\""
echo "export PYTHONPATH=\"$PYTHONPATH\""

######################### SECTION ############################
if [ "$(ls -A ${SV_HOME_LINUX_ENV_DIR})" ]; then
	for tmp in ${SV_HOME_LINUX_ENV_DIR}/*
	do
		if [ "$(basename $tmp)" != "README.txt" ]; then
			echo
			echo "#From $tmp :"
			cat "$tmp"
		fi
	done
fi
