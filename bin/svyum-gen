#!/bin/bash
##############################################################
#                                                            #
#         PROJECT : svHomeLinux                              #
#         VERSION : 1.1                                      #
#         DATE    : jeu. févr.  3 18:53:24 CET 2011          #
#         AUTHORS : Sébastien Valat                          #
#         LICENCE : GPLv2                                    #
#                                                            #
##############################################################

######################### SECTION ############################
package=$1
version=$2
slot=$3

######################### SECTION ############################
if [ "$version" = "none" ]; then
	version=''
fi

######################### SECTION ############################
#check config file
if [ ! -f ${HOME}/.svconfig ]; then
	echo "Error: Can't find ~/.svconfig file"
	exit 1
fi
#load it
source ${HOME}/.svconfig || exit 1

######################### SECTION ############################
#check config file
if [ ! -f ${PREFIX}/lib/svhomelinux/svcommon.sh ]; then
	echo "Error: Can't find ${PREFIX}/lib/svhomelinux/svcommon.sh file"
	exit 1
fi
source ${PREFIX}/lib/svhomelinux/svcommon.sh || exit 1

######################### SECTION ############################
if [ -z "$1$2" ]; then
	echo "Usage : $0 {package} [version] [--noinherit]"
	exit 1
fi

######################### SECTION ############################
function get_def_inheritance()
{
	for tmp in $*
	do
		echo "inherit svpack-${tmp}"
	done
}

######################### SECTION ############################
if [ ! -z "$slot" ]; then
	#forced_version="$(grep "^$package .* $slot$" ${SV_HOME_LINUX_SHARED}/quickpackages.slots | cut -d ' ' -f 2 )"
	forced_version=$(yumFindLastVersion ${package} $(yumGetVersionRegexp $package $slot) | cut -f 2 -d ' ')
else
	forced_version=$(yumFindLastVersion ${package} $(yumGetVersionRegexp $package) | cut -f 2 -d ' ')
fi

if [ -z "$version" ]; then
	last_version=$(yumFindLastVersion "$package" | cut -f 2 -d ' ')
	version=$last_version
else
	last_version=$version
fi

if [ ! -z "$forced_version" ]; then
	version="$forced_version"
else
	forced_version='$PACKAGE_LAST_VERSION'
fi

######################### SECTION ############################
archive=$(yumFindFileName "$package" "$version" | sed -e "s/$version/\${PACKAGE_VERSION}/g")
deps=$(grep "^$package " ${SV_HOME_LINUX_SHARED}/quickpackages.deps | cut -d ' ' -f 2-)
type=$(grep "^$package " ${SV_HOME_LINUX_SHARED}/quickpackages.type | cut -d ' ' -f 2 )
variant=$(grep "^$package " ${SV_HOME_LINUX_SHARED}/quickpackages.variant | cut -d ' ' -f 2 )
configure=$(grep "^$package " ${SV_HOME_LINUX_SHARED}/quickpackages.configure | cut -d ' ' -f 2-)
if [ -z "$slot" ]; then
	slot=$(grep "^$package $version" ${SV_HOME_LINUX_SHARED}/quickpackages.slots | cut -d ' ' -f 3 )
fi

if [ -z "$type" ]; then
	type=basic
fi

######################### SECTION ############################
if [ -z "$(echo $* | grep -e --noinherit)" ]; then
	def_inheritance="$(get_def_inheritance $type)"
else
	def_inheritance=''
fi

######################### SECTION ############################
echo "#!/bin/bash
#Generated by : svyum-gen $*
${def_inheritance}

PACKAGE_NAME='$package'
PACKAGE_LAST_VERSION=\"\$(yumFindLastVersion \$PACKAGE_NAME | cut -f 2 -d ' ')\"
#PACKAGE_LAST_VERSION='$last_version'
PACKAGE_VERSION=\"$forced_version\"
#PACKAGE_VERSION='$version'
PACKAGE_ARCHIVE=\"$archive\"
PACKAGE_SUBDIR=\"\${PACKAGE_NAME}-\${PACKAGE_VERSION}\"
PACKAGE_VARIANT='$variant'
PACKAGE_CONFIGURE_OPTIONS=\"$configure\"
PACKAGE_TEST_TARGET=''
PACKAGE_EXEC_DEPENDS='$deps'
PACKAGE_BUILD_DEPENDS=\"\$PACKAGE_EXEC_DEPENDS\"
PACKAGE_SLOT=\"$slot\"

#You can override if require
#function do_download() {}
#function do_extract() {}
#function do_move_to_build_dir() {}
#function do_patch() {}
#function do_configure() {}
#function do_make() {}
#function do_test() {}
#function do_pre_isntall() {}
#function do_install() {}
#function do_post_isntall() {}
#function do_clean() {}
"
