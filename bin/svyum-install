#!/bin/bash
##############################################################
#                                                            #
#         PROJECT : svHomeLinux                              #
#         VERSION : 1.1                                      #
#         DATE    : jeu. févr.  3 18:53:24 CET 2011          #
#         AUTHORS : Sébastien Valat                          #
#         LICENCE : GPLv2                                    #
#                                                            #
##############################################################

######################### SECTION ############################
#check config file
if [ ! -f ${HOME}/.svconfig ]; then
	echo "Error: Can't find ~/.svconfig file"
	exit 1
fi
#load it
source ${HOME}/.svconfig || exit 1

######################### SECTION ############################
#check config file
if [ ! -f ${PREFIX}/lib/svhomelinux/svcommon.sh ]; then
	echo "Error: Can't find ${PREFIX}/lib/svhomelinux/svcommon.sh file"
	exit 1
fi
source ${PREFIX}/lib/svhomelinux/svcommon.sh || exit 1

######################### SECTION ############################
#{name}
function yumSearchDepsInstall()
{
	package_file=$(getPackageFile "$1")

	if [ -z "$package_file" ]; then
		echo "Unknown package $1"
		exit 1
	fi

	package_version=$(getPackageVersion "$package_file")
	#echo "$1 -> $package_file -> $package_version"
	last_version=$(getPackageLastVersion "$package_file")
	package_deps=$(getPackageDeps "$package_file")
	package_archive=$(getPackageArchive "$package_file")
	package_name=$(getPackageName "$package_file")
	package_slot=$(getPackageSlot "$package_file")

	if ! yumCheckIfInstall "${package_name}" "${package_slot}"; then
		echo "${1};${package_version};${package_archive};${last_version};${package_file};${package_name};${package_slot}"

		if [ ! -z "$package_deps" ]; then
			#echo "DEPS = $package_deps"
			for p in $package_deps
			do
				yumCheckIfInstall "$p" && continue
				yumSearchDepsInstall "$p"
			done
		fi
	fi
}

######################### SECTION ############################
function  yumInvertList()
{
	res=""
	for tmp in $*
	do
		res="$tmp $res"
	done
	echo $res
}

######################### SECTION ############################
#deps
function yumClearnDeps()
{
	lst=""
	for tmp in $(yumInvertList $*)
	do
		if [ -z "`echo $lst | grep \"$tmp\"`" ]; then
			lst="$lst $tmp "
		fi
	done
	echo $lst
}

######################### SECTION ############################
#yumInstallPackage {package_name} {package_version} {archive_name} {last_version} {package_file}
function yumInstallPackage
{
	safe_exec svyum-pack install "$5"
}

######################### SECTION ############################
function checkPackageInstallation()
{
	for tmp in $*
	do
		pname=`echo $tmp | cut -f 6 -d ';'`
		pvers=`echo $tmp | cut -f 2 -d ';'`
		error_if_package_is_installed "${pname}" "${pvers}"
	done
}

######################### SECTION ############################
function yumInstall()
{
	DEPS=""
	for package_to_install in $*
	do
		DEPS="$DEPS $(yumSearchDepsInstall $package_to_install)"
	done
	DEPS=$(yumClearnDeps $DEPS)
	checkPackageInstallation $DEPS
	echo "========================== PACKAGES TO INSTALL ============================="
	for tmp in $DEPS
	do
		pname=`echo $tmp | cut -f 1 -d ';'`
		pvers=`echo $tmp | cut -f 2 -d ';'`
		pfname=`echo $tmp | cut -f 3 -d ';'`
		plvers=`echo $tmp | cut -f 4 -d ';'`
		pfile=`echo $tmp | cut -f 5 -d ';'`
		printf "%-15s	%-10s	%-10s	%-25s\n" "$pname" "$pvers" "$plvers" "$pfname"
	done
	echo "============================================================================"

	yes_no_question "Do you agree" "yes" || exit 0

	for tmp in $DEPS
	do
		pname=`echo $tmp | cut -f 1 -d ';'`
		pvers=`echo $tmp | cut -f 2 -d ';'`
		pfname=`echo $tmp | cut -f 3 -d ';'`
		plvers=`echo $tmp | cut -f 4 -d ';'`
		pfile=`echo $tmp | cut -f 5 -d ';'`
		yumInstallPackage "$pname" "$pvers" "$pfname" "$plvers" "$pfile"
	done
	echo ">>> END <<<"
}

######################### SECTION ############################
if [ -z "$1" ]; then
	echo "Usage : $0 {package_name} [package_name] [package_name] ..."
	exit 1
else
	yumInstall $*
fi
